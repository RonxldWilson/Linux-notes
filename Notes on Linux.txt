####################################################################
Ways to access a Linux System
1. Console
2. Remote - Need the IP address to connect remotely

If you want to connect to Linux machine via windows remotely you will need to connect via Putty Client on windows 
This connection is done via CLI

You can connect Via SSH if WIN 10 is the OS which is used for the opertion


## What is files System?

## File System in Linux

/boot - files that is used by the boot loader
/root root user home dir
/dev System devices 
/etc Confoig files
/bin -> /usr/bin - Everyday user commands
/sbin -> /usr/bin - Systme filesystem commands
/opt - Optional
/proc Running Processs
/lib - C programming lib files need by commands
/tmp - Dir for temp files
/home - dir for user
/var - System logs
/run - Systen daemons that start very early to store runtime files like PID files
/mnt To mount external filesystem
/media For cdrom mounts

### Commands for Traversing the File System

pwd
cd
ls -l 

#Linux File properties

# of links - Number of Hard links to the file. 
    For a hard link the # of hard links is the number of immediate subdirectories it has plus it's parent directory and itself


#Linux File Types

- = Regular File
d = directory
l = Link
c = Special file or Device file
s = socket
p = Named Pipe
b = block device


What is Root?

There are three types of root on Linux Systme
1. Root Account
2. Root as /: the very first directory in Linux is also refferred as root dir
3. Root home directory: the root ujser account also has a directory located in /root whihc is called root home directory

## Changing password = passwd userid


#File System paths

there are two types of paths:
    -   absolute path
    -   relative path

cd /var/log/samba

or cd var   
    cd log
    cd samba

## Creating Files and directories
    -   touch   Empty file 
    -   cp  Copying an existing file 
    -   vi  creating file using editor

Creating dir
    -   mkdir

-> ls -ltr - to list the files and order them in a timely manner

-> To exit VIM use :wq!

To Copy a directory use the cp command with -R option for recursuve and specify the source
and destination directories to be opened

cp -R <source folder> <destination folder>

To find a file use -"find" and "locate"

-> find . -name "<name of the file>" = . means start from the current location
-> find / -anme "<name of the file>"  = use this command to search from a particular repository

# Diffrence between find and locate
    -   Locate uses DB to find the file
        -   Need to run updatedb if the the DB is not updated
    -   Find iterates over the filesystem to locate the files

Locate is faster than the Find command

## wildcard
* - zero or more characters
? - represents a single character
[]  - represents a range of characters 

-> touch abc{1..9}-xyz = this will create the files from 1 to 9

## Hard Links and Soft Links

inode = Pointer or a number of a file on the hard disks

Soft Link = Link will be removed if the file is removed or renamed
Hard Link = Deleting renaming or moving the original file will not affect the hard link

Command: ln     = for hard link 
         ln -s  = for soft link

It's not possible to create a hard or soft link within the same directory, the links need to be made in the diffrent directory

Command: cat   = for viewing the file 
Command: echo  = for writing to the file

Hard links work within the same partiion

The rm command to remove the file doesn't remove the source of the file, it just removes the link to the file

Command: passwd username = to change the password of a user

Linux file system types: xfs, ext2, ext3
windows file System types: NTFS 


Command: ls -ltri = Lists the inodes of the file 

# Command Syntax
    Command Option arguments

    Options: Modify the way that a command works
    usually consist of a hyphen or a dash followed by a single letter
    some commands accept multiple options which can be grouped together

    Arguments: Most command are uswed with one arguments
    Some commands assume a default commadn if none is supplied
    Argumetns are optional for some commands but required for others

#### File Permissions
    UNIX is a multi-user system. Every file and directory in your account can be protected
    from or made accessible to other users by changing its access permissions. Every user has
    responsibility for controlling access to their files.
    -   Permissions for a file or directory may be restricted to by types
    -   There are 3 type of permissions
            r -read
            w- write
            x - execute running a program
    -   Each permission (rwx) can be controlled at three levels
            u- user yourself
            g - group can be people in the same project
            o - other = everyone on the system
    - File or Directory permission can be displayed by running ls -I command
        -rwx rwx rwx
    Command to change permission.
        -   chmod

Command: man <command> = Manual of the command 

Command chmod g-w <filename>    =   This removes the write access to the file for the group
        chmod a-r <filename>    =   This removes the read access to the file for everyone 
        chmod u-r <filename>    =   This removes the read access from the user

        chmod u+rw <filename>   = This gives the user read and write access  
        chmod ugo+r <filename>   = This gives the user read access  

 if you remove the x access from a directory then you wont be able to access the directory and open it



Table for numerical assigning access

Numebr      Permission Type     Symbol
0           No Permission       -
1           Execute             -x
2           Write               -w-
3           Execute+Write       -wx
4           Read                r--
5           Read+Execute        r-x
6           Read+Write          rw-
7           Read+Write+Execute  rwx

Ex: chmod 764 <filename>
    This gives the access as rwx to the user, rw to the group and read to all others

####################################################################
File Ownership

There are 2 ownners of a file or directory
    User and group

Command to change file Ownership
    chown and chgrp
        chown changes the ownership of a file
        chgrp changes the froup ownership of a file
Recursive ownership change option (cascade)
    -R 

####################################################################
ACL - Access Control List 

What is ACL?
    Access control list (ACL) provides an additional, more flexible permission mechanism
    for file systems. It is designed to assist with UNIX file permissions. ACL allows you to
    give permissions for any user or group to any disc resource.
Use of ACL
    Think of a scenario in which a particular user is nota member of group created by you
    but still you want to give some read or write access, how can you do it without making
    user a member of group, here comes in picture Access Control Lists, ACL helps us to do
    this trick
    Basically, ACLs are used to make a flexible permission mechanism in Linux.
    From Linux man pages, ACLs are used to define more fine-grained discretionary access
    rights for files and directories.
Commands to assign and remove ACL permissions are:
    setfacl and getfacl

List of commands for setting the ACL
1. To add permission for user
    setfacl -m u:user:rwx /path/to/file

2. To add permission for a group
    setfacl -m u:group:rwx /path/to/file

3. To allow all files or directories to inherit ACL entries from the directory it is within
    setfacl -Rm "entry" /path/to/dir

4. To remove a specific entry
    setfacl -x u:user   /path/to/file (For a specific user)

5. To remove all entries
    setfacl -b path/to/file (For all users)

Note:
    As you assign the ACL permission to a file/directory it adds + sign at the end of the permission
    Setting write permission with ACL does not allow to remove a file

Command: getfacl <filename>

The point of ACL is that sometimes I want to give read access to for just one particular user, not the group
just that one user, then we need to use ACLs 
#######################################################

Help Commands

1. whatis command
2. man command 
3. command --help 
#######################################################
 
#Adding Text to Files
    3 Simple ways to add text to a file
    -   vi
    -   Redirect command output > or >>  
    -   echo > or >>

The single redirect > will overwrite the entire contents of the file 
The double redirect >> will write it to the next line

You can output the content of a command right into a file as well

command: ls -ltr > <filename> = This will put the output in the file

##########################################################

Input and Output Redirects

There are 3 redirects in Linux
    1. Standard Input (stdin) and it has file descriptor number 0
    2. Standard output (stdout) and it has file descriptor as 1
    3. Standard error (stderr) and it has file descriptor as 2

Note: files with . in the beginnings are hidden files 

Example: telnet localhost 2> errorfile

    This will route the standard errors which are displayed to the errorfile and only display the useful things

# Standard output to a file (tee)

The Tee command is used to store and view (both at the same time) the output of a command

Command: echo "Hello world" | tee HelloWorld    =   this will add the contents to the file, like a > redirects does and also display the output
        echo "Hello world" | tee -a HelloWorld = This will append the file and add the contents in the next line


##############################################33
PIPES 

A pipe is used by the shell to connect the output of one command directly to the input of another command

The symbol is this |

Ex: Command1 [args]  | command2 [args]

Ex: comnmand: ls -ltr | more    =   this shows the Output one page at a time
command: ls -l | tail -1    =   This shows the last line of the output

#######################################################

File Maintenance commands
    cp
    rm
    mv 
    mkdir
    rmdir or rm -r 
    chgrp 
    chown

    To rename a file follow this : mv <old file> <new filename>

###############################################

File Display Commands   
    cat
    more
    less 
    head
    tail 

Note: you can use . to signify the current location 